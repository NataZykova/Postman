
HW_2 Postman


http://162.55.220.72:5005/first
1. Отправить запрос.
2. Статус код 200


pm.test("Ckeck status code", function (){
    pm.response.to.have.status(200);
});

3. Проверить, что в body приходит правильный string.

pm.test("Body matches string", function () {
    pm.expect(pm.response.text()).to.include("This is the first responce from server!");
});








http://162.55.220.72:5005/user_info_3
//1.Check status code - Статус код 200
pm.test("Check status code",function(){
    pm.response.to.have.status(200);
});

//2.Parse response body to json and check that name in respons is eql to name s request -Спарсить response body в json. Проверить, что name в ответе равно name s request (name вбить руками.)
    var jsonData= pm.response.json();
    
pm.test("Check name", function(){
    pm.expect(jsonData.name).to.eql("Tasha")

});
 //3.Check that age in respons is eql to age s request-Проверить, что age в ответе равно age s request (age вбить руками.)


pm.test("Check age", function(){
    pm.expect(jsonData.age).to.eql("39")
});

//4.check that salary in respons is eql to salary s request-Проверить, что salary в ответе равно salary s request (salary вбить руками.)



pm.test("Check salary", function(){
    pm.expect(jsonData.salary).to.eql(1600)
});

//5.Parse request and check that name in response is eql to name s request-Спарсить request. Проверить, что name в ответе равно name s request (name забрать из request.)
var reqBody=request.data;
var respBody=pm.response.json()
pm.test("Check name in response and request", function(){
pm.expect(respBody.name).to.eql(reqBody.name)
});
console.log("Resp=request ", reqBody.name," ",respBody.name)

//6.Сheck that age in response is eql to age s request-Проверить, что age в ответе равно age s request (age забрать из request.)


pm.test("Compare age in respon and req", function(){
    pm.expect(respBody.age).to.eql(reqBody.age)
});

console.log("Resp=request " ,reqBody.age ," ", respBody.age)

//7.Parse request and check that salary in response is eql to salary s request-Проверить, что salary в ответе равно salary s request (salary забрать из request.)
var newsal=+jsonData.salary
pm.test("Comape salary", function(){

    pm.expect(reqBody.newsal).to.eql(respBody.newsal)
});
console.log("Resp=request " , reqBody.salary ," ", respBody.salary)


//8.Print out in console param Family from response-Вывести в консоль параметр family из response.


var show_fam=jsonData.family
console.log("Family ",show_fam)

//9.Check that u_salary_1_5_year in response is eql salary*4 -Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)
var reqBody=request.data
var respBody=pm.response.json();


pm.test("Check u_salary_1_5_year is eql to salary*4", function() {
    pm.expect(respBody.family.u_salary_1_5_year).to.eql(reqBody.salary*4)
});
console.log("Check u_salary_1_5_year is eql to salary*4 " , respBody.family.u_salary_1_5_year , " " ,reqBody.salary*4 )












http://162.55.220.72:5005/object_info_3
//1.Check status code -Проверить статус код
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

//2.Parse response body to json-Спарсить response body в json.

var jsonData=pm.response.json()

//3.Parse-request Спарсить request.

var request=pm.request.url.query.toObject();

//4.Check that name in response is eql to name in request-Проверить, что name в ответе равно name s request (name забрать из request.)

pm.test("Check that name in response is eql to name in request", function(){
pm.expect(jsonData.name).to.eql(request.name)

});

console.log("Check that name in response is eql to name in request" , jsonData.name ," ", request.name )

//5.Check that age in responce is eql to the age in request-Проверить, что age в ответе равно age s request (age забрать из request.)

pm.test("Check that age in responce is eql to the age in request", function(){
    pm.expect(jsonData.age).to.eql(request.age)
});
console.log("Check that age in responce is eql to the age in request" , jsonData.age, " ", request.age)

//6.Check that salary in response is eql to salary's request-Проверить, что salary в ответе равно salary s request (salary забрать из request.)

var newreq=+request.salary
pm.test("Check that salary in response is eql to salary's request", function(){
    pm.expect(jsonData.salary).to.eql(newreq)
});
console.log("Check that salary in response is eql to salary's request" , jsonData.salary, " ", newreq)

//7.Print out in console param family-Вывести в консоль параметр family из response.

console.log("Print out in console param family",jsonData.family)

//8.Check that param dog has param name-Проверить, что у параметра dog есть параметры name.

pm.test("Check that param dog has param name", function(){
    pm.expect(jsonData.family.pets.dog).to.have.ownProperty('name')
    });

//9.Check that param dog has param age -Проверить, что у параметра dog есть параметры age.
pm.test("Check that param dog has param age", function(){
    pm.expect(jsonData.family.pets.dog).to.have.ownProperty('age')
});


//10.Check that param name has value Lucky-Проверить, что параметр name имеет значение Luky.

pm.test("Check that param name has value Luky", function(){
    pm.expect(jsonData.family.pets.dog.name).is.eql('Luky')
});

console.log("Name" ,jsonData.family.pets.dog.name )

// 11.Check that param age has value 4-Проверить, что параметр age имеет значение 4.

pm.test("Check that param age has value 4",function(){
    pm.expect(jsonData.family.pets.dog.age).is.eql(4)
});

console.log("Dog age ",jsonData.family.pets.dog.age )







http://162.55.220.72:5005/object_info_4
1. Отправить запрос.
//1.Check status code -Проверить статус код
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

//2.Parse response body to json-Спарсить response body в json.
var jsonData=pm.response.json()

//3.Parse request-Спарсить request.
var request=pm.request.url.query.toObject()

//4.Check that name in response is eql to name's request-Проверить, что name в ответе равно name s request (name забрать из request.)

pm.test("Check that name in response is eql to name's request", function(){
    pm.expect(jsonData.name).is.eql(request.name)
});
console.log("Check that name in response is eql to name's request" , jsonData.name, " ", request.name)

//5.Check that age in response is eql to the age in request-Проверить, что age в ответе равно age из request (age забрать из request.)
var newrequest=+request.age
pm.test("Check that age in response is eql to the age", function(){
    pm.expect(jsonData.age).is.eql(newrequest)

});

console.log("Check that age in response is eql to the age" , jsonData.age, " ", newrequest)

//6.Print out in console param salary from request-Вывести в консоль параметр salary из request.

console.log("Salary from request=" ,request.salary)

//7.print out in console param salary from resoinse- Вывести в консоль параметр salary из response

console.log("Salary from response=", jsonData.salary)

//8.Print out in console zero element of salary's param from response-Вывести в консоль 0-й элемент параметра salary параметр salary из response

console.log("Zero elem of salary=",jsonData.salary[0])

//9.Print out in console first element of salary's param from response-Вывести в консоль 1-й элемент параметра salary параметр salary из response

console.log("first elem of salary=", jsonData.salary[1])

//10.Print out in console second element of salary's param from response-Вывести в консоль 2-й элемент параметра salary параметр salary из response

console.log("Second elem of salary=", jsonData.salary[2])


//11.Check that zero element of salary param is eql to salary's from request-Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)
var newsalary=+request.salary
pm.test("Check that zero element of salary param is eql to salary's from request", function(){
    pm.expect(jsonData.salary[0]).is.eql(newsalary)


});

console.log("Check that zero element of salary param is eql to salary's from request", jsonData.salary[0], newsalary)


//12.Check that first element of salary param is eql to salary*2 from request-Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)

var salary_2=+jsonData.salary[1]
pm.test("Check that first element of salary param is eql to salary*2 from request", function(){
    pm.expect(salary_2).is.eql(request.salary*2)

});

console.log("Fisrt elem of salary is eql salary*2", salary_2, request.salary*2)

//13.Check that second param of salary is eql to salary*3 from request-Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)


var salary_3=+jsonData.salary[2]
pm.test("Check that second param of salary is eql to salary*3 from request", function(){
    pm.expect(salary_3).is.eql(request.salary*3)
});
console.log("Second elem of salary is eql salary*3", salary_3, request.salary*3)

//14.Create in enviroment var name-Создать в окружении переменную name
//15.Create in enviroment var age-Создать в окружении переменную age
//16.Create in enviroment var salary-Создать в окружении переменную salary

//17.Set to envir var name-Передать в окружение переменную name
pm.environment.set("name", jsonData.name);

console.log("Name from envir=", environment.name)

//18.Set to envir var age-Передать в окружение переменную age
pm.environment.set("age",jsonData.age);

console.log("Age from envir=", environment.age)

//19.Set to envir var salary-Передать в окружение переменную salary

pm.environment.set("salary", jsonData.salary[0])

console.log("Salary from envir=", environment.salary)

//20.Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.





http://162.55.220.72:5005/user_info_2
1. Вставить параметр salary из окружения в request
2. Вставить параметр age из окружения в age
3. Вставить параметр name из окружения в name
4. Отправить запрос.
5. Статус код 200
6. Спарсить response body в json.
7. Спарсить request.
8. Проверить, что json response имеет параметр start_qa_salary
9. Проверить, что json response имеет параметр qa_salary_after_6_months
10. Проверить, что json response имеет параметр qa_salary_after_12_months
11. Проверить, что json response имеет параметр qa_salary_after_1.5_year
12. Проверить, что json response имеет параметр qa_salary_after_3.5_years
13. Проверить, что json response имеет параметр person
14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)
15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)
16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)
17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)
18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)
19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)
20. Проверить, что что параметр u_age равен age из request (age забрать из request.)
21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)
22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.